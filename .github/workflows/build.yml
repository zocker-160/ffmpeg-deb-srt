name: build

on:
  push:
    branches:
      - master
  schedule:
    - cron: '20 04 * * *'

jobs:
  build:
    name: Build deb packages
    strategy:
      matrix:
        codename: ['focal', 'buster']
        include:
          - codename: 'focal'
            image: 'ubuntu:focal'
          - codename: 'buster'
            image: 'debian:buster'
      fail-fast: false  
    runs-on: ubuntu-latest
    container:
      image: '${{ matrix.image }}'
    env:
      DEBIAN_FRONTEND: noninteractive
      DEBIAN_PRIORITY: critical
      DEBCONF_NOWARNINGS: yes
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check if build is needed
        id: version_check
        continue-on-error: true
        run: |
          apt-get update
          export UPSTREAM_VERSION="$(apt-cache --no-all-versions show ffmpeg | awk '/^Version/ { print $2 }')"
          apt-get -y install --no-install-recommends ca-certificates apt-transport-https gnupg1 gpgv1
          apt-key add pubkey.gpg
          echo "deb $REPO ${{ matrix.codename }} main" > /etc/apt/sources.list.d/ffmpeg-srt.list
          apt-get update
          export SRT_VERSION="$(apt-cache madison ffmpeg | awk '{ if ($5 == ENVIRON["REPO"]) { print $3 } }')"
          rm -f /etc/apt/sources.list.d/ffmpeg-srt.list
          dpkg --compare-versions "$SRT_VERSION" gt "$UPSTREAM_VERSION"

      - name: Install build environment
        if: steps.version_check.outcome == 'failure'
        run: |
          apt-get update
          apt-get install build-essential devscripts equivs lintian gnupg1 gpgv1 lsb-release curl ca-certificates

      - name: Get srt source
        if: steps.version_check.outcome == 'failure' && matrix.codename == 'buster'
        run: |
          cat /etc/apt/sources.list | grep -v debian-security | sed 's/buster/bullseye/' > /etc/apt/sources.list.d/bullseye.list
          apt-get update
          apt-get -t bullseye source srt
          rm -f /etc/apt/sources.list.d/bullseye.list
          apt-get update
      - name: Get srt build dependencies
        if: steps.version_check.outcome == 'failure' && matrix.codename == 'buster'
        run: |
          mk-build-deps -i -r srt-*/debian/control
      - name: Build srt
        if: steps.version_check.outcome == 'failure' && matrix.codename == 'buster'
        run: |
          cd srt-*/
          debuild -us -uc -b
      - name: Install srt
        if: steps.version_check.outcome == 'failure' && matrix.codename == 'buster'
        run: |
          dpkg -i *.deb
      - name: Get ffmpeg source
        if: steps.version_check.outcome == 'failure'
        run: |
          apt-get source ffmpeg
      - name: Patch ffmpeg
        if: steps.version_check.outcome == 'failure'
        run: |
          cd ffmpeg-*/
          sed -i 's/^Build-Depends:$/&\n libsrt-dev,\n libssl-dev,/' debian/control
          sed -i 's/^CONFIG :=.*$/&\n        --enable-libsrt \\/' debian/rules
          dch --local +srt 'Rebuilt with SRT support by https://github.com/markuslindenberg/ffmpeg-deb-srt/'
          dch --release ''
      - name: Get ffmpeg build dependencies
        if: steps.version_check.outcome == 'failure'
        run: |
          mk-build-deps -i -r ffmpeg-*/debian/control
      - name: Build ffmpeg
        if: steps.version_check.outcome == 'failure'
        run: |
          cd ffmpeg-*/
          debuild -us -uc -b
      - name: Upload artifacts
        if: steps.version_check.outcome == 'failure'
        uses: actions/upload-artifact@v1
        with:
          name: '${{ matrix.codename }}'
          path: 'aptly/public'
